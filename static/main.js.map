{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/model/repo-info.model.ts","webpack:///./src/app/pipes/capitalize/capitalize.pipe.ts","webpack:///./src/app/pipes/order-by/order-by.pipe.ts","webpack:///./src/app/pipes/pipes.module.ts","webpack:///./src/app/services/authenticate/authenticate.service.ts","webpack:///./src/app/services/github/github.service.ts","webpack:///./src/app/services/http/http.service.ts","webpack:///./src/app/services/services.module.ts","webpack:///./src/app/store/actions/auth.actions.ts","webpack:///./src/app/store/reducers/auth.reducer.ts","webpack:///./src/app/views/login/login.component.html","webpack:///./src/app/views/login/login.component.scss","webpack:///./src/app/views/login/login.component.ts","webpack:///./src/app/views/repo-list/repo-list-header/repo-list-header.component.html","webpack:///./src/app/views/repo-list/repo-list-header/repo-list-header.component.scss","webpack:///./src/app/views/repo-list/repo-list-header/repo-list-header.component.ts","webpack:///./src/app/views/repo-list/repo-list.component.html","webpack:///./src/app/views/repo-list/repo-list.component.scss","webpack:///./src/app/views/repo-list/repo-list.component.ts","webpack:///./src/app/views/views.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { GithubService } from './services/github/github.service';\nimport { RepoInfoModel } from './model/repo-info.model';\nimport { SuccessAuth, FailureAuth } from './store/actions/auth.actions';\nimport { Store } from '@ngrx/store';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'pan-github';\n\n  constructor(private githubService: GithubService, private store: Store<{}>, private router: Router) {}\n\n  public ngOnInit(): void {\n    if (performance.navigation.type !== 1) {\n      this.clearStorage();\n    } else {\n      this.validateToken();\n    }\n  }\n\n  private clearStorage(): void {\n    window.sessionStorage.removeItem('pgAcessToken');\n  }\n\n  private validateToken(): void {\n    const savedToken = window.sessionStorage.getItem('pgAcessToken');\n    if (savedToken !== 'null') {\n      this.store.dispatch(new SuccessAuth(savedToken));\n      this.githubService.getRepoInformation()\n          .subscribe( (repos: RepoInfoModel[]) => {\n            if (repos.length) {\n              console.log('Ok Token');\n            } else {\n              console.log('Expired Token');\n              this.store.dispatch(new FailureAuth());\n              this.router.navigate(['/']);\n            }\n          });\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ViewsModule } from './views/views.module';\nimport { ROUTES } from './app.routes';\nimport { ServicesModule } from './services/services.module';\nimport { PipesModule } from './pipes/pipes.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ViewsModule,\n    RouterModule.forRoot(\n      ROUTES\n    ),\n    ServicesModule,\n    HttpClientModule,\n    PipesModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { LoginComponent } from './views/login/login.component';\nimport { RepoListComponent } from './views/repo-list/repo-list.component';\nimport { AuthGuard } from './guards/auth.guard';\n\nexport const ROUTES = [\n    {\n        path: '',\n        component: LoginComponent,\n    },\n    {\n        path: 'repositorios',\n        component: RepoListComponent,\n        canActivate: [AuthGuard],\n    },\n    {\n        path: '**',\n        component: LoginComponent,\n    },\n];\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticateService } from '../services/authenticate/authenticate.service';\nimport { Store, select } from '@ngrx/store';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthenticateService,\n    private router: Router,\n  ) {\n  }\n  canActivate(): Observable<boolean> | Promise<boolean> | boolean {\n    let isUserLoggedIn = false;\n    this.authService.isUserLoggedIn()\n        .subscribe( (acessTknValue: string) => {\n          isUserLoggedIn = !!acessTknValue;\n        });\n    if (!isUserLoggedIn) {\n      this.router.navigate(['/']);\n    }\n    return isUserLoggedIn;\n  }\n}\n","export class RepoInfoModel {\n    private name: string;\n    private qtdStars: number;\n    private qtdForks: number;\n\n    constructor(repoJson) {\n        this.name = repoJson.name;\n        this.qtdStars = repoJson.stargazers_count;\n        this.qtdForks = repoJson.forks_count;\n    }\n\n    get(field: string) {\n        return this[field];\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: string, args?: any): any {\n    return (!!value) ? `${value.substring(0, 1).toUpperCase()}${value.substr(1)}` : value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { orderBy } from 'lodash-es';\n@Pipe({\n  name: 'orderBy'\n})\nexport class OrderByPipe implements PipeTransform {\n\n  transform(value: Array<any>, param: any): Array<any> {\n    if (!value || !value.length) {\n      return value;\n    }\n    return orderBy(value, [function(val) {\n      return (typeof val[param] === 'string')\n        ? val[param].toLowerCase()\n        : val[param];\n    }], ['asc']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CapitalizePipe } from './capitalize/capitalize.pipe';\nimport { OrderByPipe } from './order-by/order-by.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    CapitalizePipe,\n    OrderByPipe\n  ],\n  exports: [\n    CapitalizePipe,\n    OrderByPipe,\n  ],\n})\nexport class PipesModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpService } from '../http/http.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { Store, select } from '@ngrx/store';\nimport { SuccessAuth, FailureAuth, LogoutAuth } from 'src/app/store/actions/auth.actions';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n  // Export user state\n  private isUserAuthenticate: Observable<string>;\n\n  constructor(private httpService: HttpService, private store: Store<{ acessTkn: string }>) {\n    this.isUserAuthenticate = this.store.pipe(select('acessTkn'));\n  }\n  // Authenthicate on github API and update the app state\n  public githubAuthenticate(code: string): Observable<boolean> {\n\n    return this.httpService.post('/login', {\n      client_id: environment.client_id,\n      client_secret: environment.client_secret,\n      code,\n    })\n      .pipe(\n        map((response) => {\n          console.log(response);\n          if (response.error) {\n            this.commitAuthState('');\n          } else {\n            this.commitAuthState(response.access_token);\n          }\n\n          return of(this.isUserLoggedIn);\n        }),\n        catchError( (error) => {\n          this.commitAuthState('');\n          return of(error);\n        })\n      );\n  }\n  // Control the success or failure to update the store\n  private commitAuthState(acessToken: string): void {\n    if (!!acessToken) {\n      this.store.dispatch(new SuccessAuth(acessToken));\n    } else {\n      this.store.dispatch(new FailureAuth());\n    }\n  }\n  // Logout service from the app\n  public logoff(): Observable<string> {\n    this.store.dispatch(new LogoutAuth());\n    return this.isUserAuthenticate;\n  }\n  // Return the the user from the state\n  public isUserLoggedIn(): Observable<string> {\n    return this.isUserAuthenticate;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { HttpService } from '../http/http.service';\nimport { RepoInfoModel } from 'src/app/model/repo-info.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubService {\n\n  constructor( private httpService: HttpService ) { }\n  // Retrieve logged user repository information\n  public getRepoInformation(): Observable<RepoInfoModel[]> {\n    return this.httpService.get('/user/repos')\n      .pipe(\n        map((response) => {\n          return response.map( (res) => {\n            return new RepoInfoModel(res);\n          });\n        }),\n        catchError((error) => {\n          return of(error);\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject, of, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Store, select } from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpService {\n  private timeoutTime: number = 30 * 1000; // 30s\n  private locationUrl: string;\n  private acessToken: Observable<string>;\n  constructor(private http: HttpClient, private store: Store<{ acessTkn: string }>) {\n    this.locationUrl = `https://${window.location.hostname}${(environment.port) ? ':8080' : ''}/api`;\n    this.acessToken = this.store.pipe(select('acessTkn'));\n  }\n\n  public get(url: string): Subject<any> {\n    // Subject to easy control the response\n    const httpResponse = new Subject();\n    // Timeout in case of not connected\n    const timeout = setTimeout(() => {\n      httpResponse.error({message: 'Não foi possível conectar. Por favor verifique sua conexão'});\n    }, this.timeoutTime);\n\n    this.http.get(`${this.locationUrl}${url}`, { headers: this.getHeaders() })\n      .pipe(\n        catchError((error) => {\n          httpResponse.error(error);\n          httpResponse.complete();\n          clearTimeout(timeout);\n          return of(null);\n        })\n      )\n      .subscribe((response: Response) => {\n        clearTimeout(timeout);\n        httpResponse.next(response);\n        httpResponse.complete();\n      });\n\n    return httpResponse;\n  }\n\n  public post(url: string, body: any): Subject<any> {\n    // Subject to easy control the response\n    const httpResponse = new Subject();\n    // Timeout in case of not connected\n    const timeout = setTimeout(() => {\n      httpResponse.error({message: 'Não foi possível conectar. Por favor verifique sua conexão'});\n    }, this.timeoutTime);\n\n    this.http.post(`${this.locationUrl}${url}`, body, { headers: this.getHeaders() })\n      .pipe(\n        catchError((error) => {\n          httpResponse.error(error);\n          httpResponse.complete();\n          clearTimeout(timeout);\n          return of(null);\n        })\n      )\n      .subscribe((response: Response) => {\n        clearTimeout(timeout);\n        httpResponse.next(response);\n        httpResponse.complete();\n      });\n\n    return httpResponse;\n  }\n  // Check the acess token and return headers based on value\n  private getHeaders(): HttpHeaders {\n    let headers: HttpHeaders;\n    this.acessToken\n        .subscribe( (acessTokenValue: string) => {\n          if (acessTokenValue) {\n            headers = new HttpHeaders({\n              'Accept': 'application/json',\n              'Content-type': 'application/json',\n              'Access-Control-Allow-Origin': '*',\n              'Authorization': `token ${acessTokenValue}`\n            });\n          } else {\n            headers = new HttpHeaders({\n              'Accept': 'application/json',\n              'Content-type': 'application/json',\n              'Access-Control-Allow-Origin': '*',\n            });\n          }\n        });\n    return headers;\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthenticateService } from './authenticate/authenticate.service';\nimport { GithubService } from './github/github.service';\nimport { StoreModule } from '@ngrx/store';\nimport { authReducer } from '../store/reducers/auth.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forRoot({ acessTkn: authReducer })\n  ],\n  providers: [\n    AuthenticateService,\n    GithubService,\n  ],\n})\nexport class ServicesModule { }\n","import { Action } from '@ngrx/store';\n\nexport enum ActionTypes {\n  Success = '[Auth API] Login Success',\n  Failure = '[Auth API] Login Fail',\n  Logout = '[Auth API] Logout',\n}\n\nexport class SuccessAuth implements Action {\n  readonly type = ActionTypes.Success;\n  constructor(public token: string) {}\n}\n\nexport class FailureAuth implements Action {\n    readonly type = ActionTypes.Failure;\n    constructor() {}\n}\n\nexport class LogoutAuth implements Action {\n    readonly type = ActionTypes.Logout;\n    constructor() {}\n}\n\nexport type Actions = SuccessAuth | FailureAuth | LogoutAuth;\n","import { ActionTypes, Actions } from '../actions/auth.actions';\n\nexport const initialState = '';\n\nexport function authReducer(state = initialState, action: Actions) {\n    switch (action.type) {\n        case ActionTypes.Success:\n            state = action.token;\n            window.sessionStorage.setItem('pgAcessToken', state);\n            return state;\n\n        case ActionTypes.Logout:\n        case ActionTypes.Failure:\n            state = '';\n            window.sessionStorage.removeItem('pgAcessToken');\n            return state;\n\n        default:\n            return state;\n    }\n}\n","module.exports = \"<div class=\\\"page-background bg-primary\\\" [style.minHeight]=\\\"windowMinHeight\\\">\\n  <div class=\\\"centered-container\\\">\\n      <div class=\\\"relative\\\">\\n          <div class=\\\"logo\\\">\\n              <span class=\\\"icon icon-logo\\\"></span>\\n          </div>\\n      </div>\\n      <div class=\\\"centered-container-body\\\">\\n        <div class=\\\"text\\\">\\n            Logue-se para exibir seus repositórios\\n        </div>\\n          <a  [href]='gitHubAuthUrl'\\n              class=\\\"btn btn-github bg-black\\\">\\n              Logar-se com o \\n              <span class=\\\"icon icon-github\\\"></span>\\n        </a>\\n          <!--<button class=\\\"btn btn-github bg-black\\\" (click)=\\\"login()\\\">Login</button>-->\\n      </div>\\n  </div>\\n</div>\"","module.exports = \".centered-container {\\n  position: fixed;\\n  top: 50%;\\n  left: 50%;\\n  height: 129px;\\n  width: 129px;\\n  padding: 2px;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  border-radius: 50%;\\n  background-color: #fff;\\n  box-shadow: 0 0 10px 1px rgba(38, 39, 48, 0.4);\\n  transition: width 0.7s cubic-bezier(0.4, 0.42, 0.56, 1.2), height 0.7s cubic-bezier(0.4, 0.42, 0.56, 1.2), border-radius 0.7s cubic-bezier(0.4, 0.42, 0.56, 1.2), padding 0.7s cubic-bezier(0.4, 0.42, 0.56, 1.2); }\\n  .centered-container .logo {\\n    height: 125px;\\n    width: 125px;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-around;\\n    border: 1px solid #1b84aa;\\n    background-color: #fff;\\n    border-radius: 50%;\\n    position: absolute;\\n    left: 50%;\\n    -webkit-transform: translate3d(-50%, 0, 0);\\n            transform: translate3d(-50%, 0, 0);\\n    transition: -webkit-transform 1.3s cubic-bezier(0, 0.47, 0.6, 1) 0.5s;\\n    transition: transform 1.3s cubic-bezier(0, 0.47, 0.6, 1) 0.5s;\\n    transition: transform 1.3s cubic-bezier(0, 0.47, 0.6, 1) 0.5s, -webkit-transform 1.3s cubic-bezier(0, 0.47, 0.6, 1) 0.5s;\\n    box-shadow: 0 0 3px 1px rgba(38, 39, 48, 0.2); }\\n  .centered-container .logo .icon-logo {\\n      width: 100%;\\n      text-align: center;\\n      font-size: 60px;\\n      margin-top: 4px; }\\n  .centered-container .centered-container-body {\\n    margin-top: 80px;\\n    opacity: 0;\\n    transition: all 0.5s cubic-bezier(0, 0.47, 0.6, 1) 1.1s;\\n    color: #3b3b3b;\\n    text-align: center;\\n    font-size: 20px; }\\n  .centered-container .centered-container-body .btn-github {\\n      margin-top: 30px;\\n      width: 100%; }\\n  .centered-container .centered-container-body .btn-github span {\\n        margin-left: 4px; }\\n  .centered-container.active {\\n    width: 300px;\\n    height: 300px;\\n    border-radius: 22px;\\n    padding: 25px; }\\n  .centered-container.active .centered-container-body {\\n      opacity: 1; }\\n  .centered-container.active .logo {\\n      border-color: #fff;\\n      -webkit-transform: translate3d(-50%, -55%, 0);\\n              transform: translate3d(-50%, -55%, 0); }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticateService } from 'src/app/services/authenticate/authenticate.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  // Ensure that the background will be 100%\n  private windowMinHeight: string;\n  // Just binding value from environment\n  private gitHubAuthUrl: string;\n  constructor(\n    private authService: AuthenticateService,\n    private router: Router,\n    private routeParams: ActivatedRoute,\n  ) {\n    this.windowMinHeight = `${window.innerHeight}px`;\n    this.gitHubAuthUrl = `https://github.com/login/oauth/authorize?scope=user:email&client_id=${environment.client_id}`;\n  }\n\n  public ngOnInit(): void {\n    this.validateLogin();\n    // Give a timeout before animate in case of having code from github\n    setTimeout(() => {\n      document.querySelector('.centered-container').classList.add('active');\n    }, 500);\n  }\n\n  // Verify if page has code form github\n  private validateLogin(): void {\n    if (!!this.routeParams.snapshot.queryParams.code) {\n      this.login(this.routeParams.snapshot.queryParams.code);\n    }\n  }\n\n  // Login\n  private login(code: string): void {\n    this.authService.githubAuthenticate(code)\n        .subscribe((response) => {\n          if (!response) {\n            this.router.navigate(['/']);\n          } else {\n            this.router.navigate(['./repositorios']);\n          }\n        });\n  }\n}\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg bg-black\\\">\\n  <a class=\\\"navbar-brand\\\">LSSouto</a>\\n  <button class=\\\"navbar-toggler\\\"\\n          type=\\\"button\\\"\\n          data-toggle=\\\"collapse\\\"\\n          aria-label=\\\"Toggle navigation\\\"\\n          (click)=\\\"isCollapsed = !isCollapsed\\\">\\n    <span class=\\\"caret\\\"></span>\\n    <span class=\\\"caret\\\"></span>\\n    <span class=\\\"caret\\\"></span>\\n  </button>\\n\\n  <div class=\\\"navbar-collapse\\\" [ngClass]=\\\"{'collapse': isCollapsed}\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item dropdown dropdown-list-view\\\" dropdown>\\n        <a class=\\\"nav-link dropdown-toggle\\\" \\n            data-toggle=\\\"dropdown\\\" \\n            aria-expanded=\\\"false\\\"\\n            dropdownToggle>\\n          Visualizar como\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" *dropdownMenu>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"toggleListClass('__list')\\\">\\n            <span class=\\\"icon icon-menu\\\"></span> Lista\\n          </a>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"toggleListClass('__card')\\\">\\n            <span class=\\\"icon icon-checkbox-unchecked\\\"></span> Cards\\n          </a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item dropdown dropdown-list-order\\\" dropdown>\\n        <a class=\\\"nav-link dropdown-toggle\\\" \\n            data-toggle=\\\"dropdown\\\" \\n            aria-expanded=\\\"false\\\"\\n            dropdownToggle>\\n          Ordernar Por\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" *dropdownMenu>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"toggleOrder('name')\\\">Nome</a>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"toggleOrder('qtdStars')\\\">Stars</a>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"toggleOrder('qtdForks')\\\">Forks</a>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","module.exports = \".navbar .dropdown-menu > a:active, .navbar .dropdown-menu > a:focus {\\n  background-color: #ebebeb;\\n  color: #262730; }\\n\\n.navbar {\\n  margin-bottom: 20px; }\\n\\n.navbar-toggler {\\n    border-color: #fff;\\n    padding: 0.25rem 0.5rem; }\\n\\n.navbar-toggler .caret {\\n      border-radius: 2px;\\n      height: 2px;\\n      width: 25px;\\n      background-color: #fff;\\n      margin: 5px 0;\\n      display: block; }\\n\\n@media (max-width: 768px) {\\n  .navbar .dropdown-menu {\\n    background-color: #31333e;\\n    padding: 0;\\n    margin-left: -1rem;\\n    margin-right: -1rem; }\\n    .navbar .dropdown-menu .dropdown-item {\\n      color: #fff;\\n      transition: all 0.12s cubic-bezier(0.4, 0, 0.2, 1) 0s; }\\n      .navbar .dropdown-menu .dropdown-item:not(:last-child) {\\n        border-bottom: 1px solid #fff; }\\n      .navbar .dropdown-menu .dropdown-item:hover {\\n        color: #262730; } }\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-repo-list-header',\n  templateUrl: './repo-list-header.component.html',\n  styleUrls: ['./repo-list-header.component.scss']\n})\nexport class RepoListHeaderComponent {\n  // Filter config used on parent component\n  private filterConfig: {\n    classStyle: string,\n    order: string\n  };\n  // Control the collapse state when mobile\n  private isCollapsed: boolean;\n  // Output the filterConfig\n  @Output()\n  private filterOptions: EventEmitter<{classStyle: string, order: string}>;\n\n  constructor() {\n    this.filterOptions = new EventEmitter();\n    this.filterConfig = {\n      classStyle: '__card',\n      order: 'name'\n    };\n    this.isCollapsed = true;\n    this.emitEvent();\n  }\n  // Toggler to the list view class\n  private toggleListClass(type: string): void {\n    this.filterConfig.classStyle = type;\n    this.emitEvent();\n  }\n  // Toggler to the list order\n  private toggleOrder(type: string): void {\n    this.filterConfig.order = type;\n    this.emitEvent();\n  }\n  // Emit the event to update the configs\n  private emitEvent(): void {\n    this.filterOptions.emit(this.filterConfig);\n  }\n}\n","module.exports = \"<app-repo-list-header (filterOptions)=\\\"filterOptionsHandler($event)\\\"></app-repo-list-header>\\n<div class=\\\"container\\\">\\n\\n  <ul class=\\\"repo-info-list\\\" [ngClass]=\\\"activeListClassStyle\\\">\\n    <li *ngFor=\\\"let repoInfo of reposInformationArray | orderBy:orderParams\\\">\\n      <div class=\\\"card-name\\\">\\n        <span class=\\\"card-identifier\\\">Nome</span>\\n        {{ repoInfo.name | capitalize }}\\n      </div>\\n      <div class=\\\"card-count-information\\\">\\n        <div class=\\\"card-stars\\\">\\n          <span class=\\\"card-information-description\\\">\\n            <span class=\\\"icon icon-star-solid\\\"></span>\\n          </span>\\n          {{ repoInfo.qtdStars }}\\n        </div>\\n        <div class=\\\"card-forks\\\">\\n            <span class=\\\"card-information-description\\\">\\n                <span class=\\\"icon icon-fork\\\"></span>\\n            </span>\\n            {{ repoInfo.qtdForks }}\\n        </div>\\n      </div>\\n    </li>\\n  </ul>\\n</div>\\n\"","module.exports = \".repo-info-list.__card {\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap;\\n  justify-content: space-between; }\\n  .repo-info-list.__card > * {\\n    flex: 0 1 25%; }\\n  @media (min-width: 768px) {\\n    .repo-info-list.__card {\\n      flex-direction: row; } }\\n  .repo-info-list.__card > li {\\n    border-radius: 6px;\\n    box-shadow: 0 2px 3px 1px rgba(38, 39, 48, 0.1);\\n    padding: 25px 15px 10px 15px;\\n    position: relative; }\\n  .repo-info-list.__card .card-name {\\n    display: block;\\n    font-size: 19px; }\\n  .repo-info-list.__card .card-count-information {\\n    position: absolute;\\n    right: 10px;\\n    top: 3px; }\\n  .repo-info-list.__card .card-count-information > * {\\n      display: inline-block;\\n      font-size: 12px; }\\n  .repo-info-list.__card .card-identifier {\\n    display: none; }\\n  .repo-info-list.__card .card-information-description {\\n    display: inline-block;\\n    margin-right: -2px;\\n    margin-left: 8px; }\\n  .repo-info-list > li {\\n  margin: 10px 25px;\\n  display: inline-block; }\\n  .repo-info-list.__list > li {\\n  display: block;\\n  border-bottom: 1px solid #ebebeb;\\n  padding: 20px 0;\\n  position: relative;\\n  margin: 0;\\n  display: flex; }\\n  @media (max-width: 768px) {\\n    .repo-info-list.__list > li {\\n      flex-wrap: wrap; }\\n      .repo-info-list.__list > li > * {\\n        padding: 0 15px; }\\n      .repo-info-list.__list > li .card-count-information {\\n        margin-top: 5px; }\\n        .repo-info-list.__list > li .card-count-information > * {\\n          display: inline-block;\\n          margin-right: 8px; }\\n      .repo-info-list.__list > li .card-count-information, .repo-info-list.__list > li .card-name {\\n        flex: 1 1 100%; } }\\n  .repo-info-list.__list .card-name {\\n  display: block;\\n  font-size: 19px;\\n  flex: 1 1 33%; }\\n  .repo-info-list.__list .card-count-information {\\n  display: flex;\\n  flex-direction: column;\\n  flex: 1 1 66%; }\\n  .repo-info-list.__list .card-count-information > * {\\n    flex: 1 1 50%; }\\n  @media (min-width: 768px) {\\n    .repo-info-list.__list .card-count-information {\\n      flex-direction: row; } }\\n  .repo-info-list.__list .card-identifier {\\n  display: block;\\n  margin-right: 6px;\\n  margin-left: -6px;\\n  color: #1b84aa; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GithubService } from 'src/app/services/github/github.service';\nimport { RepoInfoModel } from 'src/app/model/repo-info.model';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'app-repo-list',\n  templateUrl: './repo-list.component.html',\n  styleUrls: ['./repo-list.component.scss']\n})\nexport class RepoListComponent implements OnInit {\n  // List of repositorys\n  private reposInformationArray: RepoInfoModel[];\n  // Control how the list is show\n  private activeListClassStyle: string;\n  // Control the list order sending to the pipe on ngFor\n  private orderParams: string;\n\n  constructor(private githubService: GithubService) {\n    this.reposInformationArray = [];\n    this.activeListClassStyle = '__card';\n    this.orderParams = 'name';\n  }\n\n  public ngOnInit(): void {\n    this.githubService.getRepoInformation()\n        .subscribe( (informationArray: RepoInfoModel[]) => {\n          this.reposInformationArray = informationArray;\n        });\n  }\n\n  // Handle the event from header that update config\n  private filterOptionsHandler(val: {classStyle: string, order: string}): void {\n    this.activeListClassStyle = val.classStyle;\n    this.orderParams = val.order;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login/login.component';\nimport { RepoListComponent } from './repo-list/repo-list.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { PipesModule } from '../pipes/pipes.module';\nimport { RepoListHeaderComponent } from './repo-list/repo-list-header/repo-list-header.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\n@NgModule({\n    declarations: [\n        LoginComponent,\n        RepoListComponent,\n        RepoListHeaderComponent,\n    ],\n    imports: [\n        BrowserModule,\n        CommonModule,\n        PipesModule,\n        BsDropdownModule.forRoot(),\n    ],\n    exports: [\n        LoginComponent,\n        RepoListHeaderComponent,\n    ],\n})\n\nexport class ViewsModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  port: 8080,\n  client_id: 'c63b5ef5b81e7610914a',\n  client_secret: '32f6b8910137569d316eae627e3947b1aa37d77b',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}